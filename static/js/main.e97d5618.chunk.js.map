{"version":3,"sources":["serviceWorker.js","components/SearchBar.js","components/ImagenOfDay.js","components/Card.js","components/LoadingSpinner.js","components/CardList.js","components/Button.js","components/Header.js","components/Footer.js","components/ScrollArrow.js","containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","SearchBar","props","className","calendarClassName","dateFormat","onChange","searchChange","selected","date","minDate","Date","maxDate","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","ImagenOfDay","image","copyright","explanation","media_type","title","url","undefined","Fragment","alt","src","width","height","Card","imageURL","id","text","onClick","selectCard","style","backgroundImage","LoadingSpinner","promiseInProgress","usePromiseTracker","delay","color","size","margin","CardList","cards","images","keys","key","push","get","Button","Header","href","Footer","ScrollArrow","useState","showScroll","setShowScroll","addEventListener","pageYOffset","scrollTo","top","behavior","display","MONTHS","THIS_DATE","App","state","level","year","month","day","currentDate","Map","bind","comeBack","years","i","this","getFullYear","days","getImage","set","months","setCurrentImage","currentImage","setState","event","value","currentTarget","newDay","parseInt","newDate","newMonth","indexOf","daysInMonth","getMonth","getDate","has","daysOrder","entries","sort","a","b","newYear","monthsInYear","length","monthsOrder","trackPromise","fetch","URL_APOD","toISOString","slice","response","json","data","filterImages","React","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4MAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qHCKSC,G,MAnBG,SAACC,GACjB,OACI,yBAAKC,UAAU,UACb,kBAAC,IAAD,CACIA,UAAU,yDACVC,kBAAkB,uBAClBC,WAAW,aACXC,SAAUJ,EAAMK,aAChBC,SAAUN,EAAMO,KAChBC,QAAS,IAAIC,KAAK,KAAM,EAAG,GAC3BC,QAAS,IAAID,KACbE,eAAa,EACbC,mBAAiB,EACjBC,kBAAgB,EAChBC,aAAa,cCyBVC,EAzCK,SAACf,GAAW,IAAD,EAE6BA,EAAMgB,MAAxDC,EAFqB,EAErBA,UAAWC,EAFU,EAEVA,YAAaC,EAFH,EAEGA,WAAYC,EAFf,EAEeA,MAAOC,EAFtB,EAEsBA,IAEnD,OAEmB,OAAfF,QAAsCG,IAAfH,EACrB,6BACE,wBAAIlB,UAAU,4BAAd,sBAGF,kBAAC,IAAMsB,SAAP,KACE,wBAAItB,UAAU,4BAA4BmB,GAC1C,yBAAKnB,UAAU,aACb,yBAAKA,UAAU,wBACG,UAAfkB,EACC,yBAAKK,IAAI,oBACLC,IAAKJ,EACLK,MAAM,OACNC,OAAO,SAEX,4BAAQP,MAAM,aACNK,IAAKJ,EACLK,MAAM,OACNC,OAAO,WAGnB,yBAAK1B,UAAU,qCACb,uBAAGA,UAAU,UAAUiB,GACR,OAAdD,QAAoCK,IAAdL,EACrB,uBAAGhB,UAAU,UAAb,aAAgC,2BAAIgB,IAClC,OCRHW,G,OAtBF,SAAC5B,GAEZ,IAAM6B,EAAgC,UAArB7B,EAAMmB,WAAyBnB,EAAMgB,MAAQ,aAE9D,OACM,yBAAKc,GAAI9B,EAAM+B,KACX9B,UAAU,8CACV+B,QAAShC,EAAMiC,YAEjB,yBAAKhC,UAAU,mCACb,yBAAKA,UAAU,uCACbiC,MAAO,CAACC,gBAAgB,OAAD,OAASN,EAAT,OACvB,wBAAI5B,UAAU,wBACZ,8BAAOD,EAAM+B,Y,iBCIdK,EAhBQ,SAACpC,GAAW,IAEzBqC,EAAsBC,4BAAkB,CAACC,MAAO,MAAhDF,kBAER,OACE,yBAAKpC,UAAU,MACVoC,EACD,kBAAC,IAAD,CAAYG,MAAM,UACNC,KAAM,GACNC,OAAQ,IACnB,yBAAKR,MAAO,CAACP,OAAO,UCYdgB,EAtBE,SAAC3C,GAChB,IAD0B,EACtB4C,EAAQ,GADc,cAGX5C,EAAM6C,OAAOC,QAHF,IAG1B,IAAI,EAAJ,qBAAmC,CAAC,IAA5BC,EAA2B,QAC/BH,EAAMI,KAAK,kBAAC,EAAD,CAAMD,IAAKA,EACNhB,KAAMgB,EACN5B,WAAYnB,EAAM6C,OAAOI,IAAIF,GAAK5B,WAClCH,MAAOhB,EAAM6C,OAAOI,IAAIF,GAAK1B,IAC7BY,WAAYjC,EAAMiC,eARZ,8BAW1B,OACE,kBAAC,IAAMV,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKtB,UAAU,sBACZ2C,KCNMM,EAXA,SAAClD,GACd,OACE,6BACE,4BAAQC,UAAU,uFAChB+B,QAAShC,EAAMgC,SACdhC,EAAM+B,QCOAoB,EAZA,SAACnD,GACd,OACE,4BAAQC,UAAU,6DAChB,yBAAKA,UAAU,sBACb,uBAAGA,UAAU,yBAAyBmD,KAAK,IAAIhC,MAAM,QAArD,QACA,uBAAGnB,UAAU,yBAAyBmD,KAAK,IAAIhC,MAAM,SAArD,SACA,uBAAGnB,UAAU,qBAAqBmD,KAAK,IAAIhC,MAAM,WAAjD,cCQOiC,EAdA,SAACrD,GAEd,OACE,6BACE,4BAAQC,UAAU,gCAChB,uBAAGA,UAAU,mBAAb,iC,QCoBOqD,EAxBK,SAACtD,GAAW,IAAD,EACQuD,oBAAS,GADjB,mBACtBC,EADsB,KACVC,EADU,KAiB7B,OAFA9D,OAAO+D,iBAAiB,UAZD,YACjBF,GAAc7D,OAAOgE,YAAc,IACrCF,GAAc,GACPD,GAAc7D,OAAOgE,aAAe,KAC3CF,GAAc,MAWd,kBAAC,IAAD,CAAiBxD,UAAU,yBACvB+B,QARU,WAChBrC,OAAOiE,SAAS,CAACC,IAAK,EAAGC,SAAU,YAQ7B5B,MAAO,CAACP,OAAQ,GAAIoC,QAASP,EAAW,OAAO,WCbnDQ,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OACxD,QAAS,YAAa,UAAW,WAAY,YAOvDC,EAAY,IAAIxD,KAoRPyD,E,kDAhRb,WAAYlE,GAAO,IAAD,8BAChB,cAAMA,IAEDmE,MAAQ,CACTC,MAAO,EACPC,KAAM,KACNC,MAAO,KACPC,IAAK,KACLC,YAAa,IAAI/D,KACjBO,MAAO,GACP6B,OAAQ,IAAI4B,KAGhB,EAAKpE,aAAe,EAAKA,aAAaqE,KAAlB,gBACpB,EAAKzC,WAAa,EAAKA,WAAWyC,KAAhB,gBAClB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAfA,E,wLAqBVE,EAAQ,IAAIH,IAGRI,EA9BG,K,YA8BWA,GAAKC,KAAKX,MAAMK,YAAYO,e,wBAE5CC,EAAO,IAAIP,I,KACfO,E,SAAkBF,KAAKG,SAAS,IAAIxE,KAAKoE,EAAG,EAAG,I,wBAA1CK,I,UAAI,E,OAELC,EAAS,IAAIV,KACVS,IAAI,EAAGF,GAEdJ,EAAMM,IAAIL,EAAGM,G,QARkDN,I,wCAW5CC,KAAKM,gBAAgBR,EAAOE,KAAKX,MAAMK,a,QAA5Da,E,OAEAP,KAAKQ,SAAS,CACZzC,OAAQ+B,EACR5D,MAAOqE,I,mLAKME,G,kFACXhF,EAAOgF,EACTX,EAAQ,IAAIH,IAAIK,KAAKX,MAAMtB,Q,SACNiC,KAAKM,gBAAgBR,EAAOrE,G,OAAjD8E,E,OAEJP,KAAKQ,SAAS,CACZzC,OAAQ+B,EACRJ,YAAajE,EACbS,MAAOqE,I,iLAKME,G,qGACTC,EAAQD,EAAME,cAAc3D,GAC9B8C,EAAQ,IAAIH,IAAIK,KAAKX,MAAMtB,Q,KAIxBiC,KAAKX,MAAMC,M,OACX,I,OAYA,I,sCAXGsB,EAASC,SAASH,GAClBI,EAAU,IAAInF,KAAKqE,KAAKX,MAAME,KAAMS,KAAKX,MAAMG,MAAOoB,GACxDL,EAAeT,EAAM3B,IAAI6B,KAAKX,MAAME,MACfpB,IAAI6B,KAAKX,MAAMG,OACfrB,IAAIyC,GAC7BZ,KAAKQ,SAAS,CACZf,IAAKmB,EACLlB,YAAaoB,EACb5E,MAAOqE,I,6BAIHQ,EAAW7B,EAAO8B,QAAQN,GAChCL,EAAS,IAAIV,IAAIK,KAAKX,MAAMtB,OAAOI,IAAI6B,KAAKX,MAAME,OAClDW,EAAO,IAAIP,IAAIK,KAAKX,MAAMtB,OAAOI,IAAI6B,KAAKX,MAAME,MAAMpB,IAAI4C,IAKxDE,EAFCjB,KAAKX,MAAME,OAASJ,EAAUc,eAC1Bc,IAAa5B,EAAU+B,WACd/B,EAAUgC,UAEV,IAAIxF,KAAKqE,KAAKX,MAAME,KAAMwB,EAAS,EAAG,GAAGI,UAGjDpB,EAAE,E,aAAGA,GAAGkB,G,oBACVf,EAAKkB,IAAIrB,G,6BACXG,E,KAASH,E,UAASC,KAAKG,SAAS,IAAIxE,KAAKqE,KAAKX,MAAME,KAAMwB,EAAUhB,I,yBAA/DK,I,6BAFoBL,I,+BAMvBsB,EAAY,YAAInB,EAAKoB,WAAWC,MAAK,SAACC,EAAEC,GAAH,OAAOD,EAAE,GAAGC,EAAE,MAEzDpB,EAAOD,IAAIW,EAAU,IAAIpB,IAAI0B,IAC7BvB,EAAMM,IAAIJ,KAAKX,MAAME,KAAMc,GAE3BL,KAAKQ,SAAS,CACZzC,OAAQ+B,EACRR,MAAO,EACPE,MAAOuB,EACPtB,IAAK,O,6BAMDiC,EAAUb,SAASH,GACzBL,EAAS,IAAIV,IAAIK,KAAKX,MAAMtB,OAAOI,IAAIuD,IAIrCC,EADCD,IAAYvC,EAAUc,cACRd,EAAU+B,WAAa,EAEvBhC,EAAO0C,OAGhB7B,EAAE,E,aAAGA,EAAE4B,G,oBACTzB,O,GAKFA,EAHEG,EAAOe,IAAIrB,GAGNM,EAAOlC,IAAI4B,GAFX,IAAIJ,KAKJyB,IAAI,G,6BACXlB,E,UAAkBF,KAAKG,SAAS,IAAIxE,KAAK+F,EAAS3B,EAAG,I,yBAAhDK,I,UAAI,E,MACTC,EAAOD,IAAIL,EAAGG,G,QAXWH,I,+BAevB8B,EAAc,YAAIxB,EAAOiB,WAAWC,MAAK,SAACC,EAAEC,GAAH,OAAOD,EAAE,GAAGC,EAAE,MAE7D3B,EAAMM,IAAIsB,EAAS,IAAI/B,IAAIkC,IAE3B7B,KAAKQ,SAAS,CACZzC,OAAQ+B,EACRR,MAAO,EACPC,KAAMmC,EACNlC,MAAO,KACPC,IAAK,O,8JAQX,OAAOO,KAAKX,MAAMC,OAChB,KAAK,EACHU,KAAKQ,SAAS,CACZlB,MAAO,EACPE,MAAO,KACPC,IAAK,OAEP,MACF,KAAK,EACHO,KAAKQ,SAAS,CACZlB,MAAO,EACPC,KAAM,KACNC,MAAO,KACPC,IAAK,OAEP,MACF,KAAK,EACL,QACEO,KAAKQ,SAAS,CACZlB,MAAO,EACPC,KAAM,KACNC,MAAO,KACPC,IAAK,U,qCAOX,OAAOO,KAAKX,MAAMC,OAChB,KAAK,EACH,IADF,EACMY,EAAO,IAAIP,IADjB,cAE4BK,KAAKX,MAAMtB,OAAOI,IAAI6B,KAAKX,MAAME,MAC1BpB,IAAI6B,KAAKX,MAAMG,OAAO8B,WAHzD,IAEE,IAAI,EAAJ,qBACiE,CAAC,IAAD,yBADtDrD,EACsD,KADjDyC,EACiD,KAC/DR,EAAKE,IAAInC,EAAKyC,IAJlB,8BAME,OAAOR,EACT,KAAK,EACH,IADF,EACMG,EAAS,IAAIV,IADnB,cAE4BK,KAAKX,MAAMtB,OAAOI,IAAI6B,KAAKX,MAAME,MAAM+B,WAFnE,IAEE,IAAI,EAAJ,qBAA2E,CAAC,IAAD,yBAAhErD,EAAgE,KAA3DyC,EAA2D,KACzEL,EAAOD,IAAIlB,EAAOjB,GAAMyC,EAAMvC,IAAI,KAHtC,8BAKE,OAAOkC,EACT,KAAK,EACL,QACE,IADF,EACMP,EAAQ,IAAIH,IADlB,cAE4BK,KAAKX,MAAMtB,OAAOuD,WAF9C,IAEE,IAAI,EAAJ,qBAAsD,CAAC,IAAD,yBAA3CrD,EAA2C,KAAtCyC,EAAsC,KACpDZ,EAAMM,IAAInC,EAAKyC,EAAMvC,IAAI,GAAGA,IAAI,KAHpC,8BAKE,OAAO2B,K,+EAKSA,EAAOrE,G,0EAIvBqE,EAAM3B,IAAI1C,EAAKwE,eACVmB,IAAI3F,EAAKyF,aACdpB,EAAM3B,IAAI1C,EAAKwE,eACVG,IAAI3E,EAAKyF,WAAY,IAAIvB,KAG9BG,EAAM3B,IAAI1C,EAAKwE,eACV9B,IAAI1C,EAAKyF,YACTE,IAAI3F,EAAK0F,W,gCACKnB,KAAKG,SAAS1E,G,OAAnC8E,E,OACAT,EAAM3B,IAAI1C,EAAKwE,eACR9B,IAAI1C,EAAKyF,YACTd,IAAI3E,EAAK0F,UAAWZ,G,+CAEpBT,EAAM3B,IAAI1C,EAAKwE,eACf9B,IAAI1C,EAAKyF,YACT/C,IAAI1C,EAAK0F,Y,gCAGXZ,G,kLAIM9E,G,kGAEYqG,uBACDC,MAAMC,6FAEDvG,EAAKwG,cAAcC,MAAM,EAAE,M,cAHhDC,E,gBAIaA,EAASC,O,cAAtBC,E,yBACCA,G,2DAEA,I,gJAKT,IAAMnG,EAAQ8D,KAAKX,MAAMnD,MACnBT,EAAOuE,KAAKX,MAAMK,YAClB3B,EAASiC,KAAKsC,eAEpB,OACI,yBAAKnH,UAAU,eACX,kBAAC,EAAD,MACA,wBAAIA,UAAU,6BAAd,gBACA,kBAAC,EAAD,CAAWI,aAAcyE,KAAKzE,aAClBE,KAAMA,IAClB,kBAAC,EAAD,CAAaS,MAAOA,IACpB,kBAAC,EAAD,CAAU6B,OAAQA,EACRZ,WAAY6C,KAAK7C,aAC3B,kBAAC,EAAD,MACsB,IAArB6C,KAAKX,MAAMC,MACV,kBAAC,EAAD,CAAQrC,KAAM,WACNC,QAAS8C,KAAKH,WACtB,GAEF,kBAAC,EAAD,W,GA5QM0C,IAAMC,W,cCZxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SXuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e97d5618.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst SearchBar = (props) => {\n  return(\n      <div className=\"pa2 tc\">\n        <DatePicker \n            className=\"tc pa2 border-shades light-color dark-shades bodoni f3\"\n            calendarClassName=\"bodoni border-shades\"\n            dateFormat=\"dd/MM/yyyy\"\n            onChange={props.searchChange}\n            selected={props.date}\n            minDate={new Date(2015, 0, 1)}\n            maxDate={new Date()}\n            peekNextMonth\n            showMonthDropdown\n            showYearDropdown\n            dropdownMode=\"select\"/>\n      </div>\n    );\n}\n\nexport default SearchBar;","import React from 'react';\n\nconst ImagenOfDay = (props) => {\n\n  const { copyright, explanation, media_type, title, url} = props.image;\n\n  return(\n\n      media_type === null || media_type === undefined?\n        <div>\n          <h1 className=\"tc f3 light-color bodoni\">No data available</h1>\n        </div>\n      :\n        <React.Fragment>\n          <h1 className=\"tc f3 light-color bodoni\">{title}</h1>\n          <div className=\"cf ph2-ns\">\n            <div className=\"fl w-100 w-50-ns pa2\">\n              {media_type === \"image\" ?\n                <img alt='No data available' \n                    src={url} \n                    width=\"100%\"\n                    height=\"auto\"/>\n                :\n                <iframe title=\"APOD video\"\n                        src={url}\n                        width=\"100%\"\n                        height=\"350px\"/>\n              }\n            </div>\n            <div className=\"fl w-100 w-50-ns pa2 light-accent\">  \n              <p className=\"bodoni\">{explanation}</p>\n              {copyright !== null && copyright !== undefined?\n                <p className=\"bodoni\">Copyright <b>{copyright}</b></p>\n                : \"\"\n              }\n            </div>\n          </div>\n        </React.Fragment>\n      \n    );\n\n}\n\nexport default ImagenOfDay;","import React from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\n\n  const imageURL = props.media_type === \"image\" ? props.image : \"old-tv.jpg\";\n\n  return(\n        <div id={props.text} \n            className=\"fl w-50 w-third-m w-25-ns container pointer\"\n            onClick={props.selectCard}>\n\n          <div className=\"aspect-ratio aspect-ratio--16x9\">\n            <div className=\"bg-center cover aspect-ratio--object\"\n              style={{backgroundImage: `url(${imageURL})`}}>\n              <h1 className=\"cover-text bodoni f3\">\n                <span>{props.text}</span>\n              </h1>\n            </div>\n          </div>\n        </div>\n    );\n\n}\n\nexport default Card;","import React from 'react';\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nconst LoadingSpinner = (props) => {\n\n  const { promiseInProgress } = usePromiseTracker({delay: 500});\n\n  return (\n    <div className=\"tc\">\n        {promiseInProgress? \n        <BeatLoader color=\"#AEADA7\"\n                    size={15}  \n                    margin={2}/>\n        :<div style={{height:22.2}}></div>}\n    </div>\n  );\n\n}\n\nexport default LoadingSpinner;","import React from 'react';\nimport Card from './Card';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst CardList = (props) => {\n  let cards = [];\n\n  for(let key of props.images.keys()){\n      cards.push(<Card key={key}\n                      text={key}\n                      media_type={props.images.get(key).media_type}\n                      image={props.images.get(key).url} \n                      selectCard={props.selectCard}/>)  \n  }\n\n  return(\n    <React.Fragment>\n      <LoadingSpinner />\n      <div className=\"cf w-100 pv4-l ph3\">\n        {cards}\n      </div>\n    </React.Fragment>\n  );\n  \n}\n\nexport default CardList;","import React from 'react';\n\nconst Button = (props) => {\n  return(\n    <div>\n      <button className=\"f6 link dim br-pill ba bw2 ph3 pv2 dib mt2 mb2 dark-shades light-color border-shades\"\n        onClick={props.onClick}>\n        {props.text}\n      </button>\n    </div>\n  );\n}\n\nexport default Button;","import React from 'react';\n\nconst Header = (props) => {\n  return(\n    <header className=\"dark-accent light-shades w-100 ph3 pv3 pv3-ns ph3-m ph5-l\">\n      <nav className=\"f6 fw6 ttu tracked\">\n        <a className=\"link dim white dib mr3\" href=\"#\" title=\"Home\">Home</a>\n        <a className=\"link dim white dib mr3\" href=\"#\" title=\"About\">About</a>\n        <a className=\"link dim white dib\" href=\"#\" title=\"Contact\">Contact</a>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = (props) => {\n\n  return(\n    <div>\n      <footer className=\"dark-accent pv3 pv3-l ph3 tr\">\n        <p className=\"f6 light-shades\">\n          nydia.a.valencia@gmail.com\n        </p>\n      </footer>\n    </div>\n\n  );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { FaArrowCircleUp } from 'react-icons/fa';\n\nconst ScrollArrow = (props) => {\n  const[ showScroll, setShowScroll ] = useState(false);\n\n  const checkScrollTop = () => {\n    if(!showScroll && window.pageYOffset > 400){\n      setShowScroll(true);\n    }else if(showScroll && window.pageYOffset <= 400){\n      setShowScroll(false);\n    }\n  };\n\n  const scrollTop = () => {\n    window.scrollTo({top: 0, behavior: 'smooth'});\n  }\n\n  window.addEventListener('scroll', checkScrollTop);\n\n  return(\n      <FaArrowCircleUp className=\"scrollTop light-color \"\n          onClick={scrollTop}\n          style={{height: 40, display: showScroll?'flex':'none'}} />\n  );\n}\n\nexport default ScrollArrow;","import React from 'react';\nimport { trackPromise } from 'react-promise-tracker';\nimport SearchBar from '../components/SearchBar';\nimport ImagenOfDay from '../components/ImagenOfDay';\nimport CardList from '../components/CardList';\nimport Button from '../components/Button';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport ScrollArrow from '../components/ScrollArrow';\n\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July',\n                'Agust', 'September', 'Octuber', 'November', 'December'];\n\nconst URL_APOD = 'https://api.nasa.gov/planetary/apod?api_key='\n                    + process.env.REACT_APP_APOD_API_KEY;\n\nconst MIN_YEAR = 2015;\n\nconst THIS_DATE = new Date();\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n        level: 0,\n        year: null,\n        month: null,\n        day: null,\n        currentDate: new Date(),\n        image: {},\n        images: new Map()\n    }\n\n    this.searchChange = this.searchChange.bind(this);\n    this.selectCard = this.selectCard.bind(this);\n    this.comeBack = this.comeBack.bind(this);\n\n  }\n\n  async componentDidMount(){\n\n      let years = new Map();\n      let currentImage;\n\n      for(let i = MIN_YEAR; i <= this.state.currentDate.getFullYear(); i++){\n        \n        let days = new Map();\n        days.set(1, await this.getImage(new Date(i, 0, 1)));\n\n        let months = new Map();\n        months.set(0, days); \n\n        years.set(i, months);\n      }\n\n      currentImage = await this.setCurrentImage(years, this.state.currentDate);\n\n      this.setState({\n        images: years,\n        image: currentImage\n      });\n\n  }\n\n  async searchChange(event){\n    const date = event;\n    let years = new Map(this.state.images);\n    let currentImage = await this.setCurrentImage(years, date);\n    \n    this.setState({\n      images: years,\n      currentDate: date,\n      image: currentImage\n    });\n\n  }\n\n  async selectCard(event){\n    const value = event.currentTarget.id;\n    let years = new Map(this.state.images);\n    let months;\n    let days;\n\n    switch(this.state.level){\n      case 2:\n        const newDay = parseInt(value);\n        const newDate = new Date(this.state.year, this.state.month, newDay);\n        let currentImage = years.get(this.state.year)\n                                .get(this.state.month)\n                                .get(newDay);\n        this.setState({\n          day: newDay,\n          currentDate: newDate,\n          image: currentImage\n        });\n        break;\n      case 1:\n        const newMonth = MONTHS.indexOf(value);\n        months = new Map(this.state.images.get(this.state.year));\n        days = new Map(this.state.images.get(this.state.year).get(newMonth));\n        let daysInMonth \n\n        if(this.state.year === THIS_DATE.getFullYear()\n            && newMonth === THIS_DATE.getMonth()){\n          daysInMonth = THIS_DATE.getDate();\n        }else{\n          daysInMonth = new Date(this.state.year, newMonth+1, 0).getDate();\n        }\n\n        for(let i=1; i<=daysInMonth; i++){\n          if(!days.has(i)){\n            days.set(i, await this.getImage(new Date(this.state.year, newMonth, i)));\n          }\n        }\n\n        const daysOrder = [...days.entries()].sort((a,b)=>a[0]-b[0]);\n\n        months.set(newMonth, new Map(daysOrder));\n        years.set(this.state.year, months);\n\n        this.setState({\n          images: years,\n          level: 2,\n          month: newMonth,\n          day: null,\n        });\n\n        break;\n      case 0:\n      default:\n        const newYear = parseInt(value);\n        months = new Map(this.state.images.get(newYear));\n        let monthsInYear;\n\n        if(newYear === THIS_DATE.getFullYear()){\n          monthsInYear = THIS_DATE.getMonth() + 1;\n        }else{\n          monthsInYear = MONTHS.length;\n        }\n        \n        for(let i=0; i<monthsInYear; i++){\n          let days;\n\n          if(!months.has(i)){\n            days = new Map();\n          }else {\n            days = months.get(i);\n          }\n\n          if(!days.has(1)){\n            days.set(1, await this.getImage(new Date(newYear, i, 1)));\n            months.set(i, days);\n          }\n        }\n\n        const monthsOrder = [...months.entries()].sort((a,b)=>a[0]-b[0]);\n\n        years.set(newYear, new Map(monthsOrder));\n\n        this.setState({\n          images: years,\n          level: 1,\n          year: newYear,\n          month: null,\n          day: null,\n        });\n\n        break;\n    }\n  }\n\n  comeBack(){\n    switch(this.state.level){\n      case 2:\n        this.setState({\n          level: 1,\n          month: null,\n          day: null\n        });\n        break;\n      case 1:\n        this.setState({\n          level: 0,\n          year: null,\n          month: null,\n          day: null\n        });\n        break;\n      case 0:\n      default:\n        this.setState({\n          level: 0,\n          year: null,\n          month: null,\n          day: null\n        });\n        break;\n    }\n  }\n\n  filterImages(){\n    switch(this.state.level){\n      case 2:\n        let days = new Map();\n        for(const [key, value] of this.state.images.get(this.state.year)\n                                        .get(this.state.month).entries()){\n          days.set(key, value);\n        }\n        return days;\n      case 1:\n        let months = new Map();\n        for(const [key, value] of this.state.images.get(this.state.year).entries()){\n          months.set(MONTHS[key], value.get(1));\n        }\n        return months;\n      case 0:\n      default: \n        let years = new Map();\n        for(const [key, value] of this.state.images.entries()){\n          years.set(key, value.get(0).get(1));\n        }\n        return years;\n    }\n\n  }\n\n  async setCurrentImage(years, date){\n    \n    let currentImage;\n\n    if(!years.get(date.getFullYear())\n            .has(date.getMonth())){\n        years.get(date.getFullYear())\n            .set(date.getMonth(), new Map());\n    }\n\n    if(!years.get(date.getFullYear())\n            .get(date.getMonth())\n            .has(date.getDate())){\n      currentImage = await this.getImage(date);\n      years.get(date.getFullYear())\n            .get(date.getMonth())\n            .set(date.getDate(), currentImage);\n    }else{\n      return years.get(date.getFullYear())\n            .get(date.getMonth())\n            .get(date.getDate());\n    }\n\n    return currentImage;\n\n  }\n\n  async getImage(date){\n    try{\n      const response = await trackPromise(\n                            fetch(URL_APOD\n                                +'&date='\n                                +date.toISOString().slice(0,10)));\n      const data = await response.json();\n      return data;\n    }catch{\n      return {};\n    }\n  }\n\n  render(){\n    const image = this.state.image;\n    const date = this.state.currentDate;\n    const images = this.filterImages();\n\n    return(\n        <div className=\"dark-shades\">\n            <Header />\n            <h1 className=\"f1 tc bodoni light-shades\">APOD Gallery</h1>\n            <SearchBar searchChange={this.searchChange}\n                        date={date}/>\n            <ImagenOfDay image={image} />\n            <CardList images={images} \n                      selectCard={this.selectCard}/>\n            <ScrollArrow />\n            {this.state.level !== 0?\n              <Button text={\"Regresar\"} \n                      onClick={this.comeBack} />\n            : ''\n            }\n            <Footer />\n        </div>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './containers/App';\nimport 'tachyons';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}